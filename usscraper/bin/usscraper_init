#!/usr/bin/env bash

# usscraper_init - initialize the container running the unisuite scraper.

# Try to load the libraries.
source /usr/local/lib/usscraper.sh \
    || ( printf "%s\n" "/usr/local/lib/usscraper.sh is missing"; exit 1 )
source /usr/local/lib/moodle.sh \
    || ( printf "%s\n" "/usr/local/lib/moodle.sh is missing"; exit 1 )

# When initializing, we want the logs to be printed to stdout. This will be changed later in the
# main script.
LOG_FILE="/dev/stdout"; export LOG_FILE

# If no log level is specified, set it to INFO.
if [[ -z "${LOG_LEVEL}" ]]; then
    LOG_LEVEL="${LOG_INFO}"
    export LOG_LEVEL
fi

log_put "${LOG_INFO}" "Initializing usscraper." "version=${USSCRAPER_VERSION}"

# Make sure all required environment variables are present before continuing.
USSCRAPER_CONTINUE="TRUE"

log_put "${LOG_DEBUG}" "Checking environment variable." "MOODLE_BASEURL"
if [[ -z "${MOODLE_BASEURL}" ]]; then
    log_put "${LOG_CRITICAL}" "Environment variable MOODLE_BASEURL is missing."
    USSCRAPER_CONTINUE="FALSE"
fi

log_put "${LOG_DEBUG}" "Checking environment variable." "MOODLE_USERNAME"
if [[ -z "${MOODLE_USERNAME}" ]]; then
    log_put "${LOG_CRITICAL}" "Environment variable MOODLE_USERNAME is missing."
    USSCRAPER_CONTINUE="FALSE"
fi

log_put "${LOG_DEBUG}" "Checking environment variable." "MOODLE_PASSWORD"
if [[ -z "${MOODLE_PASSWORD}" ]]; then
    log_put "${LOG_CRITICAL}" "Environment variable MOODLE_PASSWORD is missing."
    USSCRAPER_CONTINUE="FALSE"
fi

log_put "${LOG_DEBUG}" "Checking environment variable." "MOODLE_SERVICE_NAME"
if [[ -z "${MOODLE_SERVICE_NAME}" ]]; then
    log_put "${LOG_CRITICAL}" "Environment variable MOODLE_SERVICE_NAME is missing."
    USSCRAPER_CONTINUE="FALSE"
fi

if [[ "${USSCRAPER_CONTINUE}" != "TRUE" ]]; then
    log_put "${LOG_CRITICAL}" "usscraper_init encountered errors, cannot continue."
    exit 1
fi

log_put "${LOG_DEBUG}" "Environment variables ok."

# Create configuration file.
log_put "${LOG_DEBUG}" "Generating configuration file."
printf "%s\n" "# usscraper configuration file - generated by usscraper_init at $(date)." \
    | tee /etc/usscraper.conf > /dev/null
printf "%s\n" "moodle_baseurl = ${MOODLE_BASEURL}" \
    | tee -a /etc/usscraper.conf > /dev/null
printf "%s\n" "moodle_username = ${MOODLE_USERNAME}" \
    | tee -a /etc/usscraper.conf > /dev/null
printf "%s\n" "moodle_password = ${MOODLE_PASSWORD}" \
    | tee -a /etc/usscraper.conf > /dev/null
printf "%s\n" "moodle_service_name = ${MOODLE_SERVICE_NAME}" \
    | tee -a /etc/usscraper.conf > /dev/null

log_put "${LOG_DEBUG}" "Unset sensitive environment variables."
# Unset the environment variables so that they are not available to every cron job.
unset MOODLE_BASEURL
unset MOODLE_USERNAME
unset MOODLE_PASSWORD
unset MOODLE_SERVICE_NAME

# Create the directory structure if it does not exist.
# This is useful when testing the scraper locally - mounting a host directory inside a container
# overwrites the container's files.
log_put "${LOG_DEBUG}" "Checking directory structure." "dir=/var/usscraper"
if [[ ! -d "/var/usscraper" ]]; then
    mkdir -p /var/usscraper || exit 1
    log_put "${LOG_DEBUG}" "Created directory." "/var/usscraper"
fi

log_put "${LOG_DEBUG}" "Checking directory structure." "dir=/var/usscraper/data"
if [[ ! -d "/var/usscraper/data" ]]; then
    mkdir -p /var/usscraper/data || exit 1
    log_put "${LOG_DEBUG}" "Created directory." "/var/usscraper/data"
fi

log_put "${LOG_DEBUG}" "Checking directory structure." "dir=/var/usscraper/logs"
if [[ ! -d "/var/usscraper/logs" ]]; then
    mkdir -p /var/usscraper/logs || exit 1
    log_put "${LOG_DEBUG}" "Created directory." "/var/usscraper/logs"
fi

log_put "${LOG_DEBUG}" "Checking directory structure." "dir=/var/usscraper/rules"
if [[ ! -d "/var/usscraper/rules" ]]; then
    mkdir -p /var/usscraper/rules || exit 1
    log_put "${LOG_DEBUG}" "Created directory." "/var/usscraper/rules"
fi

log_put "${LOG_DEBUG}" "Checking directory structure." "file=/var/usscraper/cache"
if [[ ! -f "/var/usscraper/cache" ]]; then
    touch /var/usscraper/cache || exit 1
    log_put "${LOG_DEBUG}" "Created file." "/var/usscraper/cache"
fi

log_put "${LOG_DEBUG}" "Directory structure ok."

# Make sure usscraper owns its home.
chown -R usscraper:usscraper /var/usscraper
log_put "${LOG_DEBUG}" "Acquired ownership of /var/usscraper."

# Run the cron daemon in the foreground and output to stdout.
log_put "${LOG_DEBUG}" "exec /usr/sbin/crond -f -L /dev/stdout"
exec /usr/sbin/crond -f -L /dev/stdout
